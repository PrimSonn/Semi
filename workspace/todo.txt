


====================================================================  SIGN IN TEST DRIVER TABLE  =========================================================================================


create table ACCOUNT_TB (ID varchar2(20),PW varchar2(20));


create or replace procedure SignIn (NewID in varchar2, NewPW in varchar2) begin
	if NewID is NULL or NewID=='' then
	insert into ACCOUNT_TB (ID,PW) values (NewID,NewPW);


=======================================================================  PROCEDURE WIP AREA  =======================================================

create or replace procedure ProcGetDept (PDeptNo in Dept.DeptNo%type)
is
    V_Dname Dept.DName%type;
begin
    select DName into V_Dname from Dept where DeptNo = PDeptNo;
    Dbms_Output.Put_Line(V_Dname);
end;
/

-------------------------------------------------------------------------------------------------------------------------------------

select C.IDX C_IDX, C.TITLE C_TITLE, M_IDX, M_TITLE, A_IDX, A_ID,
    case 
        when T.M_IDX is not null then 'M'
        when T.A_IDX is not null then 'A'
        when C.IDX is not null then 'C'
    end as TAG
from MOVIE_COMMENTS C full outer join (
    select M.IDX M_IDX , A.IDX A_IDX, M.TITLE M_TITLE , A.ID A_ID from MOVIES M full outer join ACCOUNTS A on 1=2) T 
on 1=2
order by TAG asc;


====================================================================  MIX LOAD TEST DRIVER TABLE  =================================================================================================

create table MOVIES ( IDX number, TITLE varchar2(20));

create table ACCOUNTS ( IDX number, ID varchar2(20));

create table MOVIE_COMMENTS ( IDX number, TITLE varchar2(20));

create table MOVIE_IMGS ( TYPE varchar2(20));

create table ACCOUNT_IMGS ( TYPE varchar2(20));

-------------------------------------------------------  inserted test rows ----------------------------------------------------------------------------------

 insert
 
-MOVIES
1 MOVIE1
2 영화2
-ACCOUNTS
1 ID1
2 아이디2
-MOVIE_COMMENTS
1 댓글1
2 댓글2
-MOVIE_IMGS
thumb
poster
-ACCOUNT_IMGS
thumb
back

INSERT ALL
   INTO t (col1, col2, col3) VALUES ('val1_1', 'val1_2', 'val1_3')
   INTO t (col1, col2, col3) VALUES ('val2_1', 'val2_2', 'val2_3')
   INTO t (col1, col2, col3) VALUES ('val3_1', 'val3_2', 'val3_3')
   .
   .
   .
SELECT 1 FROM DUAL;

insert all
	into MOVIES (IDX, TITLE) values (1,'Movie1')
	into MOVIES (IDX, TITLE) values (2, '영화2')
	into ACCOUNTS (IDX, ID) values (1, 'Id1')
	into ACCOUNTS (IDX, ID) values (2, '아이디2')
	into MOVIE_COMMENTS (IDX, TITLE) values (1, 'Comment1')
	into MOVIE_COMMENTS (IDX, TITLE) values (2, '아이디2')
	into MOVIE_IMGS (TYPE) values (thumb)
	into MOVIE_IMGS (TYPE) values (poster)
	into ACCOUNT_IMGS (TYPE) values (poster)
	into ACCOUNT_IMGS (TYPE) values (back)
select 1 from DUAL;


=============================================================================================================================================================================================

https://stackoverflow.com/questions/2526968/how-to-import-constants-in-a-jsp-page
https://docs.oracle.com/javase/6/docs/api/javax/sql/rowset/RowSetMetaDataImpl.html
https://stackoverflow.com/questions/25621497/get-attribute-from-servletcontext-on-jsp-page
https://stackoverflow.com/questions/28392888/init-param-and-context-param
https://www.roseindia.net/servlets/ServletContextListener-example.shtml
http://tomcat.apache.org/tomcat-4.0-doc/servletapi/javax/servlet/ServletConfig.html
https://stackoverflow.com/questions/18891903/how-do-i-put-listener-in-web-xml-java
servelet context listener..



1.DB creation.
real DB--sql
DB specific name rule
sequence
automated prefixed column!!!maybeNot?
procedure --no

2.more function
similar movies
upload to..image file mapping
file upload/plug-ready
application scoped static method?
static import--maybeNot

3. web side
SignIn
main page - page interface & link
MovieSpecificPage------------------!!!
header-footer
header-search





----------------- Stream API Ex -------------------------

Collections.sort(names, new Comparator<String>() {
    @Override
    public int compare(String a, String b) {
        return b.compareTo(a);
    }
});

Collections.sort(names, (a, b) -> b.compareTo(a));


